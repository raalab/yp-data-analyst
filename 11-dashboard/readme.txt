#########################################
## Структура каталогов для работы проекта
#########################################

/home/test_user/code
/home/test_user/log
# указанная структура каталогов используется при запуске пайплайна по расписанию 
# при отсутствии указанных директорий их необходимо создать
# остальной программный код предполагает, что все файлы находятся в одной директории, этого достаточно

#########################
## Содержание zip-архива:
#########################

 zen.dump - файл базы данных
 zen_pipeline.py- код пайплайна
 zen_dash.py - код дашборда
 report.pdf - файл с презентацией
 readme.txt - инструкция для запуска файлов 
 requirements.txt - файл с необходимыми библиотеками

Дополнительно:
 s0_load.sh - пакетный файл установки библиотек
 s1_ctable.py - создание агрегирующих таблиц в БД zen
 s2_startpipe.sh - пакетный файл для тестового запуска пайплайна в диапазоне времени 2019-09-24 18:00' - '2019-09-24 19:00
 df_raw.csv - выгрузка базовой таблицы log_raw из БД zen в формате csv

#################
## ПОРЯДОК РАБОТЫ
#################

########################################################
## 1. Обновление ubantu и установка необходимых пакетов:
########################################################

# возможна автоматическая загрузка через запуск пакетного файла:
sh s0_load.sh

# последовательность команд при ручном вводе:

sudo apt update
sudo apt install python3-pip
sudo apt install postgresql postgresql-contrib
sudo apt-get install python3-psycopg2 

pip3 install sqlalchemy 
pip3 install pandas
pip3 install dash 
pip3 install plotly 

# запуск СУБД
sudo service postgresql start
service postgresql status  # в случае успеха должен быть вывод слова - 'online'

############################################
## 2. Развертывание базы данных ('вручную'):
############################################
 
# Создание базы данных командой:
createdb zen --encoding='utf-8'

# Войдите в консоль PostgreSQL базы zen:
psql -d zen

# и выполните команды:
	\c zen
	CREATE USER my_user WITH ENCRYPTED PASSWORD 'my_user_password';
 	GRANT ALL PRIVILEGES ON DATABASE zen TO my_user;
# возврат из консоли БД на пользователя postgres
 	\q
# Загрузка в базу данных из бэкап-файла:
pg_restore -d zen zen.dump

## НЕОБЯЗАТЕЛЬНО
# Первое знакомство с данными
# Войдите в консоль PostgreSQL и выполните команды:
	\c zen
	\dt # состав таблиц в базе
	SELECT COUNT(*) FROM log_raw; # общее число записей в базе
 	SELECT * FROM log_raw LIMIT 10; # вывод первых 10 записей таблицы log_raw
	\q
exit # возврат на основного пользователя

######################
## 3. Запуск пайплайна
######################

sh s2_startpipe.sh 
# содержит код:
	echo Запуск пайплайна...
	python3 zen_pipeline.py --start_dt='2019-09-24 18:00' --end_dt='2019-09-24 19:00'
# код самого пайплайна в файле - zen_pipeline.py

## Инструкция для запуска по расписанию:
sudo service cron start # запуск службы crone
# настройки для автоматического запуска crone 
# тут: https://scottiestech.info/2018/08/07/run-cron-jobs-in-windows-subsystem-for-linux/
# запуск предполагается ежедневно в 3:15
# покольку в задании указано что время сервера по Москве, корректировки UTC здесь нет

15 3 * * * python3 -u -W ignore /home/test_user/code/zen_pipeline.py --start_dt=$(date +\%Y-\%m-\%d\ 00:00:00 -d "1 days ago") --end_dt=$(date +\%Y-\%m-\%d\ 00:00:00) >> /home/test_user/logs/zen_pipeline_$(date +\%Y-\%m-\%d).log 2>&1

#####################
## 4. Запуск дашборда
#####################

python3 zen_dash.py

# Для сохранения дашборда работающим после закрытия терминала
# чтобы закрыть терминал, но при этом оставить работать запущенную из него программу, 
# нажмите сочетание клавиш Ctrl+Z (позволит получить доступ к командой строке). 
# команды
disown -h %1  # %1 номер процесса  (отобразится после нажатия Ctrl+Z)
bg 1 #переводит задачу в фоновый режим

# Команда disown с ключом -h используется для того, чтобы пометить процесс с номером 1 (это наша запущенная программа) не # закрываться при закрытии терминала (на нее не подействует сигнал SIGHUP) 
# Альтернативный вариант перевода в фоновый режим добавить & в конце командной строки:
python3 zen_dash.py&

# если нужно убрать процесс: 
killall -s 9 python3 zen_dash.py

####################
ИТОГО:
####################
# работающая веб страница дашборта доступна по адресу:
http://84.201.148.59:8050/



